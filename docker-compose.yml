services:
  service-users:
    build: ./users
    ports:
    - "3001:3000"
    restart: always
    environment:
      DB_HOST: users-db
      DB_USER: postgres
      DB_PASS: postgres
      DB_NAME: usersdb
      DB_PORT: 5432
    depends_on:
      - users-db
    networks: [backend]

  users-db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: usersdb
    ports:
      - "5433:5432"
    volumes:
      - users_data:/var/lib/postgresql/data
    networks:
      - backend
  
  service-orders:
    build: ./orders
    restart: always
    environment:
      DB_HOST: orders-db
      DB_USER: postgres
      DB_PASS: postgres
      DB_NAME: ordersdb
      DB_PORT: 5432
      USERS_API: http://service-users:3000
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      - orders-db
    networks: [backend]

  orders-db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ordersdb
    ports:
      - "5434:5432"
    volumes:
      - orders_data:/var/lib/postgresql/data
    networks:
      - backend
    
  redis:
    image: redis:7
    restart: always
    ports:
      - "6379:6379"
    networks: [backend]
  
  nginx:
    image: nginx:alpine
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8080:8080"
    depends_on:
      - service-users
    networks: [backend]

volumes:
  users_data:
  orders_data:

networks:
  backend:
    driver: bridge